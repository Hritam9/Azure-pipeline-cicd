trigger:
  branches:
    include:
      - main

pool:
  vmImage: 'ubuntu-latest'

variables:
  terraformVersion: '1.6.6'

stages:
- stage: Deploy
  jobs:
  - job: Terraform
    steps:
    - checkout: self

    - script: |
        echo "Installing Terraform $(terraformVersion)"
        sudo apt-get update -y
        sudo apt-get install -y wget unzip
        wget https://releases.hashicorp.com/terraform/${terraformVersion}/terraform_${terraformVersion}_linux_amd64.zip
        unzip terraform_${terraformVersion}_linux_amd64.zip
        sudo mv terraform /usr/local/bin/
        terraform version
      displayName: 'Install Terraform'

    - script: |
        echo 'Generating terraform.tfvars from secrets...'
        echo "client_id       = \"$(client_id)\""       > terraform.tfvars
        echo "client_secret   = \"$(client_secret)\""   >> terraform.tfvars
        echo "tenant_id       = \"$(tenant_id)\""       >> terraform.tfvars
        echo "subscription_id = \"$(subscription_id)\"" >> terraform.tfvars
      displayName: 'Create terraform.tfvars securely'

    - script: terraform init
      displayName: 'Terraform Init'

    - script: terraform plan -out=tfplan
      displayName: 'Terraform Plan'

    - script: terraform apply -auto-approve tfplan
      displayName: 'Terraform Apply'
